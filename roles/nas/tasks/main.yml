- name: prepare base mount point
  file:
    path: "{{ nas.mount_base_dir }}"
    state: directory
    owner: "{{ nas.user.name }}"
    group: "{{ nas.user.name }}"
    mode: 0755
  tags: nas

- name: create users
  user:
    name: "{{ user.name }}"
    password: "{{ user.initial_password }}"
    groups: "{{ user.groups | default(omit) }}"
  with_items: "{{ users }}"
  loop_control:
    loop_var: user
  tags: nas

- name: mount external storages
  include_tasks: mount.yml
  with_dict: "{{ nas.mounts }}"
  loop_control:
    loop_var: mount
  when: nas.mounts is defined

- name: configure mirroring to secondary storage
  cron:
    name: "mirror NAS storages"
    job: "rsync -ast --delete {{ nas.mount_base_dir }}/{{ nas.mounts.primary.name }} {{ nas.mount_base_dir }}/{{ nas.mounts.secondary.name }}"
    special_time: daily
  become_user: "{{ nas.user }}"
  when: nas.mounts.secondary is defined

- name: create primary backup directory layout
  file:
    path: "{{ nas.mount_base_dir }}/{{ nas.mounts.primary.name }}/backup"
    state: directory
    owner: "{{ nas.user.name }}"
    group: "{{ nas.user.name }}"
    mode: 0755
    force: yes
  tags: nas

- name: create user backup directories and enforce secure permissions
  file:
    path: "{{ nas.mount_base_dir }}/{{ nas.mounts.primary.name }}/backup/{{ user.backup_folder_name | default(user.name) }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0750
    force: yes
  loop: "{{ users }}"
  loop_control:
    loop_var: user
  tags: nas

- name: prepare mail-based notifications
  import_tasks: mailing.yml
  tags: [ mailing, auto-upgrade ]

- name: setup unattended upgrades
  import_tasks: upgrades.yml
  tags: auto-upgrade

- name: set hostname
  import_tasks: hostname.yml
  when: not running_in_container
  tags: nas
